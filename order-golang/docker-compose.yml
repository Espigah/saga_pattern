version: '3'
services:
  go:
    build:  ./order-servcie/
    environment:
      DATABASE: host=postgres port=5432 user=admin password=admin dbname=db sslmode=disable
      MESSAGE_BROKER: kafka:9092
      TOPIC_SUCCESS: ORDER_CREATE_EVENT
      TOPIC_FAILURE: ORDER_CREATE_FAILURE_EVENT
      TOPIC_TRIGGER: ORDER_BILLED_EVENT
      TOPIC_COMPENSATION_TRIGGER: ORDER_BILLED_FAILURE_EVENT
      TOPIC_INFRA: INFRA_EVENT
    ports:
      - "8080:8080"
    depends_on: 
      - kafka
      - postgres


  postgres:
    build:  ./postgres/
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: db
    ports:
      - "5432:5432"



#___________________________________________________________________________________broker
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    hostname: zookeeper

  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "ORDER_CREATE_EVENT:1:1,ORDER_CREATE_FAILURE_EVENT:1:1,ORDER_BILLED_EVENT:1:1,ORDER_BILLED_FAILURE_EVENT:1:1,ORDER_DELIVERED_EVENT:1:1,ORDER_DELIVERED_FAILURE_EVENT:1:1,INFRA_EVENT:1:1"
      KAFKA_ADVERTISED_HOST_NAME: kafka # docker-machine ip
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - "zookeeper"

  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    depends_on: 
      - kafka