version: '3.7'

services:
  payment_service:
    build: ./payment-service/
    volumes:
      - ./payment-service/:/app/
    ports:
      - 8001:80
    depends_on: 
      - kafka
      - couchdb
    environment:
      DATABASE: http://admin:admin@couchdb:5984/
      MESSAGE_BROKER: kafka:9092
      TOPIC_SUCCESS: ORDER_BILLED_EVENT
      TOPIC_FAILURE: ORDER_BILLED_FAILURE_EVENT
      TOPIC_TRIGGER: ORDER_CREATE_EVENT
      TOPIC_COMPENSATION_TRIGGER: ORDER_CREATE_FAILURE_EVENT
      TOPIC_INFRA: INFRA_EVENT
      LOG_LEVEL: debug
      PYTHONUNBUFFERED: 1
      WORKERS_PER_CORE: 4
      MAX_WORKERS: 1
      TIMEOUT: 30
      GRACEFUL_TIMEOUT: 30
      KEEP_ALIVE: 5
#___________________________________________________________________________________ database
  couchdb:
    image: couchdb
    ports:
      - "5984:5984"
      - '1234:1234'
      - '4369:4369'
    environment:
      COUCHDB_USER: admin
      COUCHDB_PASSWORD: admin

#___________________________________________________________________________________broker
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    hostname: zookeeper

  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      KAFKA_CREATE_TOPICS: "ORDER_CREATE_EVENT:1:1,ORDER_CREATE_FAILURE_EVENT:1:1,ORDER_BILLED_EVENT:1:1,ORDER_BILLED_FAILURE_EVENT:1:1,ORDER_DELIVERED_EVENT:1:1,ORDER_DELIVERED_FAILURE_EVENT:1:1,INFRA_EVENT:1:1"
      KAFKA_ADVERTISED_HOST_NAME: kafka # docker-machine ip
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - "zookeeper"

  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    depends_on:
      - kafka
